{
	"name": "lsp-sample",
	"description": "OJS Language Server",
	"author": "Patrick Schmidt",
	"license": "MIT",
	"version": "0.1.0",
	"repository": {
		"type": "git",
		"url": "https://github.com/Microsoft/vscode-extension-samples"
	},
	"publisher": "Patrick Schmidt",
	"categories": [ "Language Packs" ],
	"keywords": [
		"OPX",
		"Planisware",
		"OpxScript",
		"opxscript",
		"ojs"
	],
	"engines": {
		"vscode": "^1.23.0"
	},
	"activationEvents": [
		"onLanguage:opxscript"
	],
	"main": "./client/out/extension",
	"contributes": {
		"languages": [
			{
				"id": "opxscript",
				"aliases": [
					"OpxScript",
					"opxscript",
					"ojs"
				],
				"mimetypes": [
					"text/opxscript"
				],
				"extensions": [
					".ojs"
				],
				"configuration": "./opx_lang/language-configuration.json"
			}
		],
		"grammars": [
			{
				"language": "opxscript",
				"scopeName": "source.ojs",
				"path": "./opx_lang/syntaxes/OpxScript.tmLanguage.json"
			}
		],
		"snippets": [
			{
				"language": "opxscript",
				"path": "./opx_lang/snippets/opxscript.json"
			}
		],
		"configuration": {
			"type": "object",
			"title": "Ojs configuration",
			"properties": {
				"ojs.interfaceUrl": {
					"type": "string",
					"default": null,
					"description": "Fetches environment data from this url, you need to have the opx_lsp plugin installed on planisware."
				},
				"ojs.interfaceUser": {
					"type": "string",
					"default": "",
					"description": "User who has access to the opx_lsp rest interface on planisware."
				},
				"ojs.interfacePass": {
					"type": "string",
					"default": "",
					"description": "Password of he user for the opx_lsp rest interface on planisware."
				}
			}
		}
	},
	"scripts": {
		"vscode:prepublish": "cd client && npm run update-vscode && cd .. && npm run compile",
		"compile:client": "tsc -p ./client/tsconfig.json",
		"compile:server": "tsc -p ./server/tsconfig.json",
		"watch:client": "tsc -w -p ./client/tsconfig.json",
		"watch:server": "tsc -w -p ./server/tsconfig.json",
		"compile": "npm run compile:client && npm run compile:server",
		"postinstall": "cd client && yarn install && cd ../server && yarn install && cd ..",
		"test": "sh ./scripts/e2e.sh",
		"unit": "mocha -r ts-node/register ./**/test/**/*.spec.ts"
	},
	"devDependencies": {
		"@types/chai": "^4.1.4",
		"@types/mocha": "^5.2.5",
		"@types/node": "^8.0.0",
		"chai": "^4.1.2",
		"mocha": "^5.2.0",
		"ts-node": "^7.0.0",
		"typescript": "2.8.3"
	}
}
