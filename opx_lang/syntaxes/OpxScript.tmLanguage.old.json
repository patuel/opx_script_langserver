{
	"name": "opxscript",
	"scopeName": "source.ojs",
	"fileTypes": [
		".ojs"
	],
	"patterns": [
		{
			"include": "#directives"
		},
		{
			"include": "#statements"
		},
		{
			"name": "comment.line.shebang.ts",
			"match": "\\A(#!).*(?=$)",
			"captures": {
				"1": {
					"name": "punctuation.definition.comment.ts"
				}
			}
		}
	],
	"repository": {
		"statements": {
			"patterns": [
				{
					"include": "#string"
				},
				{
					"include": "#template"
				},
				{
					"include": "#comment"
				},
				{
					"include": "#literal"
				},
				{
					"include": "#declaration"
				},
				{
					"include": "#switch-statement"
				},
				{
					"include": "#for-loop"
				},
				{
					"include": "#after-operator-block"
				},
				{
					"include": "#decl-block"
				},
				{
					"include": "#control-statement"
				},
				{
					"include": "#expression"
				},
				{
					"include": "#punctuation-semicolon"
				}
			]
		},
		"var-expr": {
			"name": "meta.var.expr.ojs",
			"begin": "(?<!\\.|\\$)(?:(\\bexport)\\s+)?\\b(var|let|const(?!\\s+enum\\b))\\b(?!\\$)",
			"beginCaptures": {
				"1": {
					"name": "keyword.control.export.ojs"
				},
				"2": {
					"name": "storage.type.ojs"
				}
			},
			"end": "(?=$|;|}|(\\s+(of|in)\\s+))",
			"patterns": [
				{
					"include": "#destructuring-variable"
				},
				{
					"include": "#var-single-variable"
				},
				{
					"include": "#variable-initializer"
				},
				{
					"include": "#comment"
				},
				{
					"include": "#punctuation-comma"
				}
			]
		},
		"var-single-variable": {
			"patterns": [
				{
					"name": "meta.var-single-variable.expr.js",
					"begin": "(?x)([_$[:alpha:]][_$[:alnum:]]*)(?=\\s* (=\\s*( (async\\s+) | (function\\s*[(<]) | (function\\s+) | ([_$[:alpha:]][_$[:alnum:]]*\\s*=>) | ((<([^<>]|\\<[^<>]+\\>)+>\\s*)?\\(([^()]|\\([^()]*\\))*\\)(\\s*:\\s*(.)*)?\\s*=>)) ) | (:\\s*( (<) | ([(]\\s*( ([)]) | (\\.\\.\\.) | ([_$[:alnum:]]+\\s*( ([:,?=])| ([)]\\s*=>) )) ))) ))",
					"beginCaptures": {
						"1": {
							"name": "entity.name.function.ojs"
						}
					},
					"end": "(?=$|[;,=}]|(\\s+(of|in)\\s+))",
					"patterns": [
						{
							"include": "#type-annotation"
						},
						{
							"include": "#string"
						},
						{
							"include": "#comment"
						}
					]
				},
				{
					"name": "meta.var-single-variable.expr.js",
					"begin": "([_$[:alpha:]][_$[:alnum:]]*)",
					"beginCaptures": {
						"1": {
							"name": "variable.other.readwrite.ojs"
						}
					},
					"end": "(?=$|[;,=}]|(\\s+(of|in)\\s+))",
					"patterns": [
						{
							"include": "#type-annotation"
						},
						{
							"include": "#string"
						},
						{
							"include": "#comment"
						}
					]
				}
			]
		},
		"destructuring-variable": {
			"patterns": [
				{
					"name": "meta.array-binding-pattern-variable.js",
					"begin": "(?<!=|:|of|in)\\s*(?=\\[)",
					"end": "(?=$|[;,=}]|(\\s+(of|in)\\s+))",
					"patterns": [
						{
							"include": "#array-binding-pattern"
						},
						{
							"include": "#type-annotation"
						},
						{
							"include": "#comment"
						}
					]
				}
			]
		},
		"object-binding-element": {
			"patterns": [
				{
					"include": "#comment"
				},
				{
					"begin": "(?=(([_$[:alpha:]][_$[:alnum:]]*)|(\\'[^']*\\')|(\\\"[^\"]*\\\")|(\\[([^\\[\\]]|\\[[^\\[\\]]+\\])+\\]))\\s*(:))",
					"end": "(?=,|\\})",
					"patterns": [
						{
							"include": "#object-binding-element-propertyName"
						},
						{
							"include": "#binding-element"
						}
					]
				},
				{
					"include": "#object-binding-pattern"
				},
				{
					"include": "#destructuring-variable-rest"
				},
				{
					"include": "#variable-initializer"
				},
				{
					"include": "#punctuation-comma"
				}
			]
		},
		"object-binding-element-propertyName": {
			"begin": "(?=(([_$[:alpha:]][_$[:alnum:]]*)|(\\'[^']*\\')|(\\\"[^\"]*\\\")|(\\[([^\\[\\]]|\\[[^\\[\\]]+\\])+\\]))\\s*(:))",
			"end": "(:)",
			"endCaptures": {
				"0": {
					"name": "punctuation.destructuring.ojs"
				}
			},
			"patterns": [
				{
					"include": "#string"
				},
				{
					"include": "#array-literal"
				},
				{
					"name": "variable.object.property.ojs",
					"match": "([_$[:alpha:]][_$[:alnum:]]*)"
				}
			]
		},
		"binding-element": {
			"patterns": [
				{
					"include": "#comment"
				},
				{
					"include": "#object-binding-pattern"
				},
				{
					"include": "#array-binding-pattern"
				},
				{
					"include": "#destructuring-variable-rest"
				},
				{
					"include": "#variable-initializer"
				}
			]
		},
		"destructuring-variable-rest": {
			"match": "(?:(\\.\\.\\.)\\s*)?([_$[:alpha:]][_$[:alnum:]]*)",
			"captures": {
				"1": {
					"name": "keyword.operator.rest.ojs"
				},
				"2": {
					"name": "variable.other.readwrite.ojs"
				}
			}
		},
		"object-binding-pattern": {
			"begin": "(?:(\\.\\.\\.)\\s*)?(\\{)",
			"beginCaptures": {
				"1": {
					"name": "keyword.operator.rest.ojs"
				},
				"2": {
					"name": "punctuation.definition.binding-pattern.object.js"
				}
			},
			"end": "\\}",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.binding-pattern.object.js"
				}
			},
			"patterns": [
				{
					"include": "#object-binding-element"
				}
			]
		},
		"array-binding-pattern": {
			"begin": "(?:(\\.\\.\\.)\\s*)?(\\[)",
			"beginCaptures": {
				"1": {
					"name": "keyword.operator.rest.ojs"
				},
				"2": {
					"name": "punctuation.definition.binding-pattern.array.js"
				}
			},
			"end": "\\]",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.binding-pattern.array.js"
				}
			},
			"patterns": [
				{
					"include": "#binding-element"
				},
				{
					"include": "#punctuation-comma"
				}
			]
		},
		"ternary-expression": {
			"begin": "(?=\\?)",
			"end": "(?=$|[;,})\\]])",
			"patterns": [
				{
					"include": "#ternary-operator"
				},
				{
					"include": "#expression"
				}
			]
		},
		"ternary-operator": {
			"begin": "(\\?)",
			"beginCaptures": {
				"0": {
					"name": "keyword.operator.ternary.ojs"
				}
			},
			"end": "(:)",
			"endCaptures": {
				"0": {
					"name": "keyword.operator.ternary.ojs"
				}
			},
			"patterns": [
				{
					"include": "#expression"
				}
			]
		},
		"expression": {
			"name": "meta.expression.ojs",
			"patterns": [
				{
					"include": "#jsx"
				},
				{
					"include": "#string"
				},
				{
					"include": "#regex"
				},
				{
					"include": "#template"
				},
				{
					"include": "#comment"
				},
				{
					"include": "#literal"
				},
				{
					"include": "#function-declaration"
				},
				{
					"include": "#method-declaration"
				},
				{
					"include": "#cast"
				},
				{
					"include": "#ternary-expression"
				},
				{
					"include": "#new-expr"
				},
				{
					"include": "#object-literal"
				},
				{
					"include": "#expression-operators"
				},
				{
					"include": "#function-call"
				},
				{
					"include": "#support-objects"
				},
				{
					"include": "#identifiers"
				},
				{
					"include": "#paren-expression"
				},
				{
					"include": "#punctuation-comma"
				},
				{
					"include": "#punctuation-accessor"
				}
			]
		},
		"control-statement": {
			"patterns": [
				{
					"name": "keyword.control.trycatch.ojs",
					"match": "(?<!\\.|\\$)\\b(catch|throw|try)\\b(?!\\$)"
				},
				{
					"name": "keyword.control.loop.ojs",
					"match": "(?<!\\.|\\$)\\b(break|continue|while)\\b(?!\\$)"
				},
				{
					"name": "keyword.control.flow.ojs",
					"match": "(?<!\\.|\\$)\\b(return)\\b(?!\\$)"
				},
				{
					"name": "keyword.control.switch.ojs",
					"match": "(?<!\\.|\\$)\\b(case|default|switch)\\b(?!\\$)"
				},
				{
					"name": "keyword.control.conditional.ojs",
					"match": "(?<!\\.|\\$)\\b(else|if)\\b(?!\\$)"
				},
				{
					"name": "keyword.control.with.ojs",
					"match": "(?<!\\.|\\$)\\b(with)\\b(?!\\$)"
				},
				{
					"name": "keyword.control.sqlwithdatabasetransaction.ojs",
					"match": "(?<!\\.|\\$)\\b(sqlWithDatabaseTransaction)\\b(?!\\$)"
				},
				{
					"name": "keyword.control.withnoappletrefresh.ojs",
					"match": "(?<!\\.|\\$)\\b(withNoAppletRefresh)\\b(?!\\$)"
				},
				{
					"name": "keyword.control.fromobject.ojs",
					"match": "(?<!\\.|\\$)\\b(fromObject)\\b(?!\\$)"
				},
				{
					"name": "keyword.control.withobjectlock.ojs",
					"match": "(?<!\\.|\\$)\\b(withObjectLock)\\b(?!\\$)"
				},
				{
					"name": "keyword.control.withoutalerts.ojs",
					"match": "(?<!\\.|\\$)\\b(withoutAlerts)\\b(?!\\$)"
				},
				{
					"name": "keyword.control.withoutdatabaserecording.ojs",
					"match": "(?<!\\.|\\$)\\b(withoutDatabaseRecording)\\b(?!\\$)"
				},
				{
					"name": "keyword.control.withoutlocking.ojs",
					"match": "(?<!\\.|\\$)\\b(withoutLocking)\\b(?!\\$)"
				},
				{
					"name": "keyword.control.whenthrow.ojs",
					"match": "(?<!\\.|\\$)\\b(whenThrow)\\b(?!\\$)"
				},
				{
					"name": "keyword.control.whentimeout.ojs",
					"match": "(?<!\\.|\\$)\\b(whenTimeout)\\b(?!\\$)"
				},
				{
					"name": "keyword.control.withmonitoring.ojs",
					"match": "(?<!\\.|\\$)\\b(withMonitoring)\\b(?!\\$)"
				},
				{
					"name": "keyword.control.withoutinterrupts.ojs",
					"match": "(?<!\\.|\\$)\\b(withoutInterrupts)\\b(?!\\$)"
				},
				{
					"name": "keyword.control.withprocesslock.ojs",
					"match": "(?<!\\.|\\$)\\b(withProcessLock)\\b(?!\\$)"
				},
				{
					"name": "keyword.control.withnoappletrefresh.ojs",
					"match": "(?<!\\.|\\$)\\b(withNoAppletRefresh)\\b(?!\\$)"
				}
			]
		},
		"declaration": {
			"name": "meta.declaration.ojs",
			"patterns": [
				{
					"include": "#decorator"
				},
				{
					"include": "#var-expr"
				},
				{
					"include": "#function-declaration"
				},
				{
					"include": "#method-declaration"
				},
				{
					"include": "#namespace-declaration"
				},
				{
					"include": "#import-equals-declaration"
				},
				{
					"include": "#import-declaration"
				},
				{
					"include": "#export-declaration"
				}
			]
		},
		"decorator": {
			"name": "meta.decorator.ojs",
			"begin": "(?<!\\.|\\$)\\@",
			"beginCaptures": {
				"0": {
					"name": "punctuation.decorator.ojs"
				}
			},
			"end": "(?=\\s)",
			"patterns": [
				{
					"include": "#expression"
				}
			]
		},
		"type-object": {
			"name": "meta.object.type.ojs",
			"begin": "\\{",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.block.ojs"
				}
			},
			"end": "\\}",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.block.ojs"
				}
			},
			"patterns": [
				{
					"include": "#type-object-members"
				}
			]
		},
		"type-object-members": {
			"patterns": [
				{
					"include": "#comment"
				},
				{
					"include": "#indexer-declaration"
				},
				{
					"include": "#indexer-mapped-type-declaration"
				},
				{
					"include": "#field-declaration"
				},
				{
					"include": "#type-annotation"
				},
				{
					"begin": "\\.\\.\\.",
					"beginCaptures": {
						"0": {
							"name": "keyword.operator.spread.ojs"
						}
					},
					"end": "(?=\\}|;|,|$)|(?<=\\})",
					"patterns": [
						{
							"include": "#type"
						}
					]
				},
				{
					"include": "#punctuation-comma"
				},
				{
					"include": "#punctuation-semicolon"
				}
			]
		},
		"field-declaration": {
			"name": "meta.field.declaration.ojs",
			"begin": "(?<!\\()(?:(?<!\\.|\\$)\\b(?=(([_$[:alpha:]][_$[:alnum:]]*)|(\\'[^']*\\')|(\\\"[^\"]*\\\")|(\\[([^\\[\\]]|\\[[^\\[\\]]+\\])+\\]))\\s*(\\?\\s*)?(=|:))",
			"beginCaptures": {
				"1": {
					"name": "storage.modifier.ojs"
				}
			},
			"end": "(?=\\}|;|,|$)|(?<=\\})",
			"patterns": [
				{
					"include": "#variable-initializer"
				},
				{
					"begin": "(?=((?:[_$[:alpha:]][_$[:alnum:]]*)|(?:\\'[^']*\\')|(?:\\\"[^\"]*\\\")|(\\[([^\\[\\]]|\\[[^\\[\\]]+\\])+\\]))\\s*(\\?\\s*)?(=|:))",
					"end": "(?=[};,=]|$)|(?<=\\})",
					"patterns": [
						{
							"include": "#type-annotation"
						},
						{
							"include": "#string"
						},
						{
							"include": "#array-literal"
						},
						{
							"include": "#comment"
						},
						{
							"name": "entity.name.function.ojs",
							"match": "(?x)([_$[:alpha:]][_$[:alnum:]]*)(?=(\\?\\s*)?\\s* (=\\s*( (async\\s+) | (function\\s*[(<]) | (function\\s+) | ([_$[:alpha:]][_$[:alnum:]]*\\s*=>) | ((<([^<>]|\\<[^<>]+\\>)+>\\s*)?\\(([^()]|\\([^()]*\\))*\\)(\\s*:\\s*(.)*)?\\s*=>)) ) | (:\\s*( (<) | ([(]\\s*( ([)]) | (\\.\\.\\.) | ([_$[:alnum:]]+\\s*( ([:,?=])| ([)]\\s*=>) )) ))) ))"
						},
						{
							"name": "variable.object.property.ojs",
							"match": "[_$[:alpha:]][_$[:alnum:]]*"
						}
					]
				}
			]
		},
		"indexer-declaration": {
			"name": "meta.indexer.declaration.ojs",
			"begin": "(?:(?<!\\.|\\$)\\b(\\[)\\s*([_$[:alpha:]][_$[:alnum:]]*)\\s*(?=:)",
			"beginCaptures": {
				"1": {
					"name": "storage.modifier.ojs"
				},
				"2": {
					"name": "meta.brace.square.ojs"
				},
				"3": {
					"name": "variable.parameter.ojs"
				}
			},
			"end": "(\\])\\s*(\\?\\s*)?|$",
			"endCaptures": {
				"1": {
					"name": "meta.brace.square.ojs"
				},
				"2": {
					"name": "keyword.operator.optional.ojs"
				}
			},
			"patterns": [
				{
					"include": "#type-annotation"
				}
			]
		},
		"indexer-mapped-type-declaration": {
			"name": "meta.indexer.mappedtype.declaration.ojs",
			"begin": "(?:(?<!\\.|\\$)\\b(\\[)\\s*([_$[:alpha:]][_$[:alnum:]]*)\\s+(in)\\s+",
			"beginCaptures": {
				"1": {
					"name": "storage.modifier.ojs"
				},
				"2": {
					"name": "meta.brace.square.ojs"
				},
				"3": {
					"name": "entity.name.type.ojs"
				},
				"4": {
					"name": "keyword.operator.expression.in.ojs"
				}
			},
			"end": "(\\])\\s*(\\?\\s*)?|$",
			"endCaptures": {
				"1": {
					"name": "meta.brace.square.ojs"
				},
				"2": {
					"name": "keyword.operator.optional.ojs"
				}
			},
			"patterns": [
				{
					"include": "#type"
				}
			]
		},
		"function-declaration": {
			"name": "meta.function.ojs",
			"begin": "(?<!\\.|\\$)\\b(function\\b)\\s*([_$[:alpha:]][_$[:alnum:]]*)\\s*",
			"beginCaptures": {
				"1": {
					"name": "storage.type.function.ojs"
				},
				"2": {
					"name": "entity.name.function.ojs"
				}
			},
			"end": "(?=;|\\})|(?<=\\})",
			"patterns": [
				{
					"include": "#comment"
				},
				{
					"include": "#type-parameters"
				},
				{
					"include": "#function-parameters"
				},
				{
					"include": "#return-type"
				},
				{
					"include": "#function-overload-declaration"
				},
				{
					"include": "#decl-block"
				}
			]
		},
		"method-declaration": {
			"name": "meta.method.ojs",
			"begin": "(?<!\\.|\\$)\\b(method\\b)\\s*\\b([_$[:alpha:]][_$[:alnum:]]*\\b)\\s*\\b(on\\b)\\s*\\b([_$[:alpha:]][_$[:alnum:]]*\\b)\\s*",
			"beginCaptures": {
				"1": {
					"name": "storage.type.function.ojs"
				},
				"2": {
					"name": "entity.name.function.ojs"
				},
				"3": {
					"name": "storage.type.function.ojs"
				},
				"4": {
					"name": "storage.type.class.ojs"
				}
			} ,
			"end": "(?=;|\\})|(?<=\\})",
			"patterns": [
				{
					"include": "#comment"
				},
				{
					"include": "#type-parameters"
				},
				{
					"include": "#function-parameters"
				},
				{
					"include": "#return-type"
				},
				{
					"include": "#function-overload-declaration"
				},
				{
					"include": "#decl-block"
				}
			]
		},
		"decl-block": {
			"name": "meta.block.ojs",
			"begin": "\\{",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.block.ojs"
				}
			},
			"end": "\\}",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.block.ojs"
				}
			},
			"patterns": [
				{
					"include": "#statements"
				}
			]
		},
		"after-operator-block": {
			"name": "meta.objectliteral.ojs",
			"begin": "(?<=[=(,\\[?+!]|await|return|yield|throw|in|of|typeof|&&|\\|\\||\\*)\\s*(\\{)",
			"beginCaptures": {
				"1": {
					"name": "punctuation.definition.block.ojs"
				}
			},
			"end": "\\}",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.block.ojs"
				}
			},
			"patterns": [
				{
					"include": "#object-member"
				}
			]
		},
		"parameter-name": {
			"patterns": [
				{
					"match": "(?x)(?:\\s*\\b(readonly)\\s+)?(?:\\s*\\b(public|private|protected)\\s+)?(\\.\\.\\.)?\\s*(?<!=|:)([_$[:alpha:]][_$[:alnum:]]*)\\s*(\\??)(?=\\s* (=\\s*( (async\\s+) | (function\\s*[(<]) | (function\\s+) | ([_$[:alpha:]][_$[:alnum:]]*\\s*=>) | ((<([^<>]|\\<[^<>]+\\>)+>\\s*)?\\(([^()]|\\([^()]*\\))*\\)(\\s*:\\s*(.)*)?\\s*=>)) ) | (:\\s*( (<) | ([(]\\s*( ([)]) | (\\.\\.\\.) | ([_$[:alnum:]]+\\s*( ([:,?=])| ([)]\\s*=>) )) ))) ))",
					"captures": {
						"1": {
							"name": "storage.modifier.ojs"
						},
						"2": {
							"name": "storage.modifier.ojs"
						},
						"3": {
							"name": "keyword.operator.rest.ojs"
						},
						"4": {
							"name": "entity.name.function.ojs"
						},
						"5": {
							"name": "keyword.operator.optional.ojs"
						}
					}
				},
				{
					"match": "(?:\\s*\\b(readonly)\\s+)?(?:\\s*\\b(public|private|protected)\\s+)?(\\.\\.\\.)?\\s*(?<!=|:)([_$[:alpha:]][_$[:alnum:]]*)\\s*(\\??)",
					"captures": {
						"1": {
							"name": "storage.modifier.ojs"
						},
						"2": {
							"name": "storage.modifier.ojs"
						},
						"3": {
							"name": "keyword.operator.rest.ojs"
						},
						"4": {
							"name": "variable.parameter.ojs"
						},
						"5": {
							"name": "keyword.operator.optional.ojs"
						}
					}
				}
			]
		},
		"destructuring-parameter": {
			"patterns": [
				{
					"name": "meta.paramter.array-binding-pattern.js",
					"begin": "(?<!=|:)\\s*(\\{)",
					"beginCaptures": {
						"1": {
							"name": "punctuation.definition.binding-pattern.array.js"
						}
					},
					"end": "\\}",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.binding-pattern.array.js"
						}
					},
					"patterns": [
						{
							"include": "#parameter-binding-element"
						},
						{
							"include": "#punctuation-comma"
						}
					]
				}
			]
		},
		"parameter-binding-element": {
			"patterns": [
				{
					"include": "#comment"
				},
				{
					"include": "#parameter-array-binding-pattern"
				},
				{
					"include": "#destructuring-parameter-rest"
				},
				{
					"include": "#variable-initializer"
				}
			]
		},
		"destructuring-parameter-rest": {
			"match": "(?:(\\.\\.\\.)\\s*)?([_$[:alpha:]][_$[:alnum:]]*)",
			"captures": {
				"1": {
					"name": "keyword.operator.rest.ojs"
				},
				"2": {
					"name": "variable.parameter.ojs"
				}
			}
		},
		"parameter-object-binding-pattern": {
			"begin": "(?:(\\.\\.\\.)\\s*)?(\\{)",
			"beginCaptures": {
				"1": {
					"name": "keyword.operator.rest.ojs"
				},
				"2": {
					"name": "punctuation.definition.binding-pattern.object.js"
				}
			},
			"end": "\\}",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.binding-pattern.object.js"
				}
			},
			"patterns": [
				{
					"include": "#parameter-object-binding-element"
				}
			]
		},
		"parameter-array-binding-pattern": {
			"begin": "(?:(\\.\\.\\.)\\s*)?(\\[)",
			"beginCaptures": {
				"1": {
					"name": "keyword.operator.rest.ojs"
				},
				"2": {
					"name": "punctuation.definition.binding-pattern.array.js"
				}
			},
			"end": "\\]",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.binding-pattern.array.js"
				}
			},
			"patterns": [
				{
					"include": "#parameter-binding-element"
				},
				{
					"include": "#punctuation-comma"
				}
			]
		},
		"return-type": {
			"name": "meta.return.type.ojs",
			"begin": "(?<=\\))\\s*(:)",
			"beginCaptures": {
				"1": {
					"name": "keyword.operator.type.annotation.ojs"
				}
			},
			"end": "(?<!:)((?=$)|(?=\\{|;|//|\\}))",
			"patterns": [
				{
					"include": "#comment"
				},
				{
					"name": "meta.object.type.ojs",
					"begin": "(?<=:)\\s*(\\{)",
					"beginCaptures": {
						"1": {
							"name": "punctuation.definition.block.ojs"
						}
					},
					"end": "\\}",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.block.ojs"
						}
					},
					"patterns": [
						{
							"include": "#type-object-members"
						}
					]
				},
				{
					"include": "#type-predicate-operator"
				},
				{
					"include": "#type"
				}
			]
		},
		"type-predicate-operator": {
			"name": "keyword.operator.expression.is.ojs",
			"match": "(?<!\\.|\\$)\\bis\\b(?!\\$)"
		},
		"type-annotation": {
			"name": "meta.type.annotation.ojs",
			"begin": ":",
			"beginCaptures": {
				"0": {
					"name": "keyword.operator.type.annotation.ojs"
				}
			},
			"end": "(?=$|[,);\\}\\]]|//)|(?==[^>])|(?<=[\\}>\\]\\)]|[_$[:alpha:]])\\s*(?=\\{)",
			"patterns": [
				{
					"include": "#comment"
				},
				{
					"include": "#type"
				}
			]
		},
		"type": {
			"name": "meta.type.ojs",
			"patterns": [
				{
					"include": "#comment"
				},
				{
					"include": "#string"
				},
				{
					"include": "#numeric-literal"
				},
				{
					"include": "#type-primitive"
				},
				{
					"include": "#type-builtin-literals"
				},
				{
					"include": "#type-parameters"
				},
				{
					"include": "#type-tuple"
				},
				{
					"include": "#type-object"
				},
				{
					"include": "#type-operators"
				},
				{
					"include": "#type-fn-type-parameters"
				},
				{
					"include": "#type-paren-or-function-parameters"
				},
				{
					"include": "#type-function-return-type"
				},
				{
					"include": "#type-name"
				}
			]
		},
		"function-parameters": {
			"name": "meta.parameters.ojs",
			"begin": "\\(",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.parameters.begin.ojs"
				}
			},
			"end": "\\)",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.parameters.end.ojs"
				}
			},
			"patterns": [
				{
					"include": "#comment"
				},
				{
					"include": "#decorator"
				},
				{
					"include": "#destructuring-parameter"
				},
				{
					"include": "#parameter-name"
				},
				{
					"include": "#type-annotation"
				},
				{
					"include": "#variable-initializer"
				},
				{
					"name": "punctuation.separator.parameter.ojs",
					"match": ","
				}
			]
		},
		"type-primitive": {
			"name": "support.type.primitive.ojs",
			"match": "(?<!\\.|\\$)\\b(string|number|boolean|symbol|any|void|never)\\b(?!\\$)"
		},
		"type-builtin-literals": {
			"name": "support.type.builtin.ojs",
			"match": "(?<!\\.|\\$)\\b(this|true|false|undefined|null)\\b(?!\\$)"
		},
		"type-paren-or-function-parameters": {
			"name": "meta.type.paren.cover.ojs",
			"begin": "\\(",
			"beginCaptures": {
				"0": {
					"name": "meta.brace.round.ojs"
				}
			},
			"end": "\\)",
			"endCaptures": {
				"0": {
					"name": "meta.brace.round.ojs"
				}
			},
			"patterns": [
				{
					"include": "#type"
				},
				{
					"include": "#function-parameters"
				}
			]
		},
		"type-fn-type-parameters": {
			"patterns": [
				{
					"name": "meta.type.constructor.ojs",
					"match": "(?<!\\.|\\$)\\b(new)\\b(?=\\s*\\<)",
					"captures": {
						"1": {
							"name": "keyword.control.new.ojs"
						}
					}
				},
				{
					"name": "meta.type.constructor.ojs",
					"begin": "(?<!\\.|\\$)\\b(new)\\b\\s*(?=\\()",
					"beginCaptures": {
						"1": {
							"name": "keyword.control.new.ojs"
						}
					},
					"end": "(?<=\\))",
					"patterns": [
						{
							"include": "#function-parameters"
						}
					]
				},
				{
					"name": "meta.type.function.ojs",
					"begin": "(?<=\\>)\\s*(?=\\()",
					"end": "(?<=\\))",
					"patterns": [
						{
							"include": "#function-parameters"
						}
					]
				},
				{
					"name": "meta.type.function.ojs",
					"begin": "(?x)( (?= [(]\\s*( ([)]) |  (\\.\\.\\.) | ([_$[:alnum:]]+\\s*( ([:,?=])| ([)]\\s*=>) )) ) ) )",
					"end": "(?<=\\))",
					"patterns": [
						{
							"include": "#function-parameters"
						}
					]
				}
			]
		},
		"type-operators": {
			"patterns": [
				{
					"include": "#typeof-operator"
				},
				{
					"name": "keyword.operator.type.ojs",
					"match": "[&|]"
				},
				{
					"name": "keyword.operator.expression.keyof.ojs",
					"match": "(?<!\\.|\\$)\\bkeyof\\b(?!\\$)"
				}
			]
		},
		"type-function-return-type": {
			"name": "meta.type.function.return.ojs",
			"begin": "=>",
			"beginCaptures": {
				"0": {
					"name": "storage.type.function.arrow.ojs"
				}
			},
			"end": "(?<!=>)(?=[,\\]\\)\\{\\}=;>]|//|$)",
			"patterns": [
				{
					"include": "#comment"
				},
				{
					"name": "meta.object.type.ojs",
					"begin": "(?<==>)\\s*(\\{)",
					"beginCaptures": {
						"1": {
							"name": "punctuation.definition.block.ojs"
						}
					},
					"end": "\\}",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.block.ojs"
						}
					},
					"patterns": [
						{
							"include": "#type-object-members"
						}
					]
				},
				{
					"include": "#type-predicate-operator"
				},
				{
					"include": "#type"
				}
			]
		},
		"type-tuple": {
			"name": "meta.type.tuple.ojs",
			"begin": "\\[",
			"beginCaptures": {
				"0": {
					"name": "meta.brace.square.ojs"
				}
			},
			"end": "\\]",
			"endCaptures": {
				"0": {
					"name": "meta.brace.square.ojs"
				}
			},
			"patterns": [
				{
					"include": "#type"
				},
				{
					"include": "#punctuation-comma"
				}
			]
		},
		"type-name": {
			"patterns": [
				{
					"match": "([_$[:alpha:]][_$[:alnum:]]*)\\s*(\\.)",
					"captures": {
						"1": {
							"name": "entity.name.type.module.ojs"
						},
						"2": {
							"name": "punctuation.accessor.ojs"
						}
					}
				},
				{
					"name": "entity.name.type.ojs",
					"match": "[_$[:alpha:]][_$[:alnum:]]*"
				}
			]
		},
		"type-parameters": {
			"name": "meta.type.parameters.ojs",
			"begin": "(<)",
			"beginCaptures": {
				"1": {
					"name": "punctuation.definition.typeparameters.begin.ojs"
				}
			},
			"end": "(?=$)|(>)",
			"endCaptures": {
				"1": {
					"name": "punctuation.definition.typeparameters.end.ojs"
				}
			},
			"patterns": [
				{
					"include": "#comment"
				},
				{
					"name": "storage.modifier.ojs",
					"match": "(?<!\\.|\\$)\\b(extends)\\b(?!\\$)"
				},
				{
					"include": "#type"
				},
				{
					"include": "#punctuation-comma"
				}
			]
		},
		"variable-initializer": {
			"begin": "(?<!=|!)(=)(?!=)",
			"beginCaptures": {
				"1": {
					"name": "keyword.operator.assignment.ojs"
				}
			},
			"end": "(?=$|[,);}\\]])",
			"patterns": [
				{
					"include": "#expression"
				}
			]
		},
		"for-loop": {
			"begin": "(?<!\\.|\\$)\\b(for)\\s*(\\()",
			"beginCaptures": {
				"1": {
					"name": "keyword.control.loop.ojs"
				},
				"2": {
					"name": "meta.brace.round.ojs"
				}
			},
			"end": "\\)",
			"endCaptures": {
				"0": {
					"name": "meta.brace.round.ojs"
				}
			},
			"patterns": [
				{
					"include": "#var-expr"
				},
				{
					"include": "#expression"
				},
				{
					"include": "#punctuation-semicolon"
				}
			]
		},
		"switch-expression": {
			"name": "switch-expression.expr.js",
			"begin": "(?<!\\.|\\$)\\b(switch)\\s*(\\()",
			"beginCaptures": {
				"1": {
					"name": "keyword.control.switch.ojs"
				},
				"2": {
					"name": "meta.brace.round.ojs"
				}
			},
			"end": "\\)",
			"endCaptures": {
				"0": {
					"name": "meta.brace.round.ojs"
				}
			},
			"patterns": [
				{
					"include": "#expression"
				}
			]
		},
		"switch-block": {
			"name": "switch-block.expr.js",
			"begin": "{",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.block.ojs"
				}
			},
			"end": "(?=\\})",
			"patterns": [
				{
					"include": "#case-clause"
				},
				{
					"include": "#statements"
				}
			]
		},
		"case-clause": {
			"name": "case-clause.expr.js",
			"begin": "(?<!\\.|\\$)\\b(case|default(?=:))\\b(?!\\$)",
			"beginCaptures": {
				"1": {
					"name": "keyword.control.switch.ojs"
				}
			},
			"end": ":",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.section.case-statement.js"
				}
			},
			"patterns": [
				{
					"include": "#expression"
				}
			]
		},
		"switch-statement": {
			"name": "switch-statement.expr.js",
			"begin": "(?<!\\.|\\$)(?=\\bswitch\\s*\\()",
			"end": "}",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.block.ojs"
				}
			},
			"patterns": [
				{
					"include": "#switch-expression"
				},
				{
					"include": "#switch-block"
				}
			]
		},
		"support-objects": {
			"patterns": [
				{
					"name": "support.class.builtin.ojs",
					"match": "(?x)(?<!\\.|\\$)\\b(Array|Aggregate|DateVector|OpxCurve|OpxEnvDbConnection|OpxDocument|Formula|Curve|Graphics|Hyperlink|OpxEditor|TestSuite|ObjectAttribute|ObjectClass|ObjectRelation|Fileinputstream|Fileoutputstream|Funnelbar|Hashtable|Icalserver|Imapserver|Messagestring|Object|Ojsobject|Opxconsole|Opxdataset|Opxobject|Pathname|Regexp|Symbol|Variable|Vector|Zipfile|OpxBasicAuthorization|OpxDigestAuthorization|Date|Function|Integer|String)\\b(?!\\$)"
				},
				{
					"name": "support.class.error.ojs",
					"match": "(?<!\\.|\\$)\\b(Error)\\b(?!\\$)"
				},
				{
					"name": "support.function.ojs",
					"match": "(?x)(?<!\\.|\\$)\\b(a(bs|cos|dd(Annotation|C(lickHandler|o(lorHandler|ntourColorHandler))|DpeClass|IconHandler|Rule|StyleHandler|Text(ColorHandler|FontHandler)|Widget)|lert|pp(en(d|dDir)|licableMethod)|rchiveDataset|sin|t(an|c|tributeLocked))|benchDatabase|c(all|all(BooleanFormula|D(ateFormula|urationFormula)|Macro|NumberFormula|StringFormula)|ancelCurrentTransaction|eil|hooseFile|l(ea(r|rAll)|ose)|o(mpile(AllScripts|Scripts)|nvertToUTF8|py|py(File|WithPList)|rrectString|s)|reateRankingAttribute|ur(rentOpx2User|veTypeToString))|d(e(fine(ActivityCurveAggregator|Ruleset|TransactionThreshold)|leteFile)|fEqual|i(fference|splay(MonitoringResults|WorkFlowchart))|ocumentPath|ump)|e(ditO(bject|px2Object)|qual|rror|va(l|lAfterCommand)|x(ecute|it|p|p(andObjectTable|ort(AllEnvironmen(t|tincvs)|Dataset(s|sInCVS)|Function))|trac(e|t|tFilterFromFormula)))|f(ileWriteDate|indClass|loor|ormat|ormatVector|ormatXML)|g(e(nerateUrlForMap|t|t(A(llApplicableRules|nnotatio(n|nDataset|nId)|ppli(cableRules|edStyle)|ttribut(e|eFeature))|C(lassIndex|urrent(ApplyEditor|HistoryState))|Da(te|y)|H(ighlight|ours)|In(dexTable|ternalValue)|M(a(cro|ndatoryFields)|inutes|onth)|N(ewMessages|umberOfNewMessages)|Patchversion|Rule(Set|Table)|S(e(conds|rverFiles)|lot)|T(ableName|emporaryObject|im(e|ezoneOffset))|U(rl|serparameter)|Value|Xml(Element|Type)|Year))|lobalVarExis(t|ts))|htmlToText|i(mport(EnvironmentObject|Function|Image)|n(Language|dex(AllDocuments|Of)|ferior|heritFrom|s(ert|pect)|ter(nalToExternal|rupt))|s(ChildOf|M(andatoryField|onitoringEnabled)|RelationField|Visible))|join|kernelProfilerStatus|l(Trim|a(stIndexOf|unch)|is(p(Val|eval)|t(Attributes|PossibleValue(s|sStrings)))|o(ad|ck(Object|ed)|g))|m(a(keOpx2Object|keOpx2ObjectWithPList|p|pStrings|skRegexp|x)|in|kdir|o(dif(y|yWithPList)|nitor))|next|open|p(arse(D(ate|uration|)|Int|List|Number|Object|Vector)|o(p|sition|w)|r(evious|int(Attribute|KernelIndex)|oFileFunctio(n|oFileFunctionMemory)|o(beFile|mpt)|)|ush)|question|r(Trim|andom|e(a(d|d(Attribut(e|eInBase)|C(har|ontent)|KernelIndex|Line))|computeCostAndDate|g(Replace|Spli(t|tToVector)|expSearch|mask)|m|m(DpeClass|PermanentLock|Rule|ov(e|eDuplicates))|nameFile|place(CurrentPageHistory|Regexp)|qu(estMatchString|irePatch)|s(et(History|Monitoring|Workflow)|toreDataset))|ichtext|ound)|s(ave|aveDatasetAs|cheduleResources|e(a(chObjectWithPList|rc(h|h(Object|String)))|lectDat(a|um)t|t(Br(eak|owserTitle)|CacheonReader|Date|ExitCode|Hours|In(dex(FieldsToMap|Printer|Reader)|ternalValue)|M(inutes|onth)|PermanentLock|Seconds|Time|UserParameter|Value|Year))|hadow|in|o(lveResourcesConflicts|rt)|plit(Regexp|RegexpToVector|e)|q(l(Co(mmit|unttuple)|D(elete|isableCommit)|E(nableCommit|xecuteImmediate)|Probetabl(e|eColumn|eIndex)|Rollback|Select|TestConnection|Update|WithDatabaseTransaction|insert)|rt)t(art(KernelProfiler|Monitoring)|o(p(KernelProfiler|Monitoring)|reTemporaryObject)|ring(CurveType|ReferenceToObject))|ubst(itute|ring)|y(nchronizeProjectInPorfolio|slog))|t(an|est|o(LowerCase|UpperCase|Strin(g|gReference))|race|reedo|rim)|u(n(lockObject|s(cheduleResources|hadow)|trace)|seDescalations|sertools)|w(idgetChangedByAdvancedSettings|rit(e|eToLog|e_text_key|eln)))(?=\\s*\\()"
				},
				{
					"match": "(?x)(?<!\\.|\\$)\\b(Math)(?:\\s*(\\.)\\s*(?:\n  (abs|acos|asin|atan|ceil|cos|floor|log|max|min|pow|random|round|sign|sin|sqrt|tan)|(E|LN10|PI|SQRT1_2|SQRT2)))?\\b(?!\\$)",
					"captures": {
						"1": {
							"name": "support.constant.math.ojs"
						},
						"2": {
							"name": "punctuation.accessor.ojs"
						},
						"3": {
							"name": "support.function.math.ojs"
						},
						"4": {
							"name": "support.constant.property.math.ojs"
						}
					}
				},
				{
					"match": "(?<!\\.|\\$)\\b(Rest)(?:\\s*(\\.)\\s*(defineODataImportFunction|odataError|get|json|parse|post|put|select))?\\b(?!\\$)",
					"captures": {
						"1": {
							"name": "support.constant.json.ojs"
						},
						"2": {
							"name": "punctuation.accessor.ojs"
						},
						"3": {
							"name": "support.function.json.ojs"
						}
					}
				},
				{
					"match": "(?x) (?<!\\.|\\$) \\b (?:\n  (document|event|navigator|performance|screen|window) \n  |\n  (AnalyserNode|ArrayBufferView|Attr|AudioBuffer|AudioBufferSourceNode|AudioContext|AudioDestinationNode|AudioListener\n  |AudioNode|AudioParam|BatteryManager|BeforeUnloadEvent|BiquadFilterNode|Blob|BufferSource|ByteString|CSS|CSSConditionRule\n  |CSSCounterStyleRule|CSSGroupingRule|CSSMatrix|CSSMediaRule|CSSPageRule|CSSPrimitiveValue|CSSRule|CSSRuleList|CSSStyleDeclaration\n  |CSSStyleRule|CSSStyleSheet|CSSSupportsRule|CSSValue|CSSValueList|CanvasGradient|CanvasImageSource|CanvasPattern\n  |CanvasRenderingContext2D|ChannelMergerNode|ChannelSplitterNode|CharacterData|ChromeWorker|CloseEvent|Comment|CompositionEvent\n  |Console|ConvolverNode|Coordinates|Credential|CredentialsContainer|Crypto|CryptoKey|CustomEvent|DOMError|DOMException\n  |DOMHighResTimeStamp|DOMImplementation|DOMString|DOMStringList|DOMStringMap|DOMTimeStamp|DOMTokenList|DataTransfer\n  |DataTransferItem|DataTransferItemList|DedicatedWorkerGlobalScope|DelayNode|DeviceProximityEvent|DirectoryEntry\n  |DirectoryEntrySync|DirectoryReader|DirectoryReaderSync|Document|DocumentFragment|DocumentTouch|DocumentType|DragEvent\n  |DynamicsCompressorNode|Element|Entry|EntrySync|ErrorEvent|Event|EventListener|EventSource|EventTarget|FederatedCredential\n  |FetchEvent|File|FileEntry|FileEntrySync|FileException|FileList|FileReader|FileReaderSync|FileSystem|FileSystemSync\n  |FontFace|FormData|GainNode|Gamepad|GamepadButton|GamepadEvent|Geolocation|GlobalEventHandlers|HTMLAnchorElement\n  |HTMLAreaElement|HTMLAudioElement|HTMLBRElement|HTMLBaseElement|HTMLBodyElement|HTMLButtonElement|HTMLCanvasElement\n  |HTMLCollection|HTMLContentElement|HTMLDListElement|HTMLDataElement|HTMLDataListElement|HTMLDialogElement|HTMLDivElement\n  |HTMLDocument|HTMLElement|HTMLEmbedElement|HTMLFieldSetElement|HTMLFontElement|HTMLFormControlsCollection|HTMLFormElement\n  |HTMLHRElement|HTMLHeadElement|HTMLHeadingElement|HTMLHtmlElement|HTMLIFrameElement|HTMLImageElement|HTMLInputElement\n  |HTMLKeygenElement|HTMLLIElement|HTMLLabelElement|HTMLLegendElement|HTMLLinkElement|HTMLMapElement|HTMLMediaElement\n  |HTMLMetaElement|HTMLMeterElement|HTMLModElement|HTMLOListElement|HTMLObjectElement|HTMLOptGroupElement|HTMLOptionElement\n  |HTMLOptionsCollection|HTMLOutputElement|HTMLParagraphElement|HTMLParamElement|HTMLPreElement|HTMLProgressElement\n  |HTMLQuoteElement|HTMLScriptElement|HTMLSelectElement|HTMLShadowElement|HTMLSourceElement|HTMLSpanElement|HTMLStyleElement\n  |HTMLTableCaptionElement|HTMLTableCellElement|HTMLTableColElement|HTMLTableDataCellElement|HTMLTableElement|HTMLTableHeaderCellElement\n  |HTMLTableRowElement|HTMLTableSectionElement|HTMLTextAreaElement|HTMLTimeElement|HTMLTitleElement|HTMLTrackElement\n  |HTMLUListElement|HTMLUnknownElement|HTMLVideoElement|HashChangeEvent|History|IDBCursor|IDBCursorWithValue|IDBDatabase\n  |IDBEnvironment|IDBFactory|IDBIndex|IDBKeyRange|IDBMutableFile|IDBObjectStore|IDBOpenDBRequest|IDBRequest|IDBTransaction\n  |IDBVersionChangeEvent|IIRFilterNode|IdentityManager|ImageBitmap|ImageBitmapFactories|ImageData|Index|InputDeviceCapabilities\n  |InputEvent|InstallEvent|InstallTrigger|KeyboardEvent|LinkStyle|LocalFileSystem|LocalFileSystemSync|Location|MIDIAccess\n  |MIDIConnectionEvent|MIDIInput|MIDIInputMap|MIDIOutputMap|MediaElementAudioSourceNode|MediaError|MediaKeyMessageEvent\n  |MediaKeySession|MediaKeyStatusMap|MediaKeySystemAccess|MediaKeySystemConfiguration|MediaKeys|MediaRecorder|MediaStream\n  |MediaStreamAudioDestinationNode|MediaStreamAudioSourceNode|MessageChannel|MessageEvent|MessagePort|MouseEvent\n  |MutationObserver|MutationRecord|NamedNodeMap|Navigator|NavigatorConcurrentHardware|NavigatorGeolocation|NavigatorID\n  |NavigatorLanguage|NavigatorOnLine|Node|NodeFilter|NodeIterator|NodeList|NonDocumentTypeChildNode|Notification\n  |OfflineAudioCompletionEvent|OfflineAudioContext|OscillatorNode|PageTransitionEvent|PannerNode|ParentNode|PasswordCredential\n  |Path2D|PaymentAddress|PaymentRequest|PaymentResponse|Performance|PerformanceEntry|PerformanceFrameTiming|PerformanceMark\n  |PerformanceMeasure|PerformanceNavigation|PerformanceNavigationTiming|PerformanceObserver|PerformanceObserverEntryList\n  |PerformanceResourceTiming|PerformanceTiming|PeriodicSyncEvent|PeriodicWave|Plugin|Point|PointerEvent|PopStateEvent\n  |PortCollection|Position|PositionError|PositionOptions|PresentationConnectionClosedEvent|PresentationConnectionList\n  |PresentationReceiver|ProcessingInstruction|ProgressEvent|PromiseRejectionEvent|PushEvent|PushRegistrationManager\n  |RTCCertificate|RTCConfiguration|RTCPeerConnection|RTCSessionDescriptionCallback|RTCStatsReport|RadioNodeList|RandomSource\n  |Range|ReadableByteStream|RenderingContext|SVGAElement|SVGAngle|SVGAnimateColorElement|SVGAnimateElement|SVGAnimateMotionElement\n  |SVGAnimateTransformElement|SVGAnimatedAngle|SVGAnimatedBoolean|SVGAnimatedEnumeration|SVGAnimatedInteger|SVGAnimatedLength\n  |SVGAnimatedLengthList|SVGAnimatedNumber|SVGAnimatedNumberList|SVGAnimatedPoints|SVGAnimatedPreserveAspectRatio\n  |SVGAnimatedRect|SVGAnimatedString|SVGAnimatedTransformList|SVGAnimationElement|SVGCircleElement|SVGClipPathElement\n  |SVGCursorElement|SVGDefsElement|SVGDescElement|SVGElement|SVGEllipseElement|SVGEvent|SVGFilterElement|SVGFontElement\n  |SVGFontFaceElement|SVGFontFaceFormatElement|SVGFontFaceNameElement|SVGFontFaceSrcElement|SVGFontFaceUriElement\n  |SVGForeignObjectElement|SVGGElement|SVGGlyphElement|SVGGradientElement|SVGHKernElement|SVGImageElement|SVGLength\n  |SVGLengthList|SVGLineElement|SVGLinearGradientElement|SVGMPathElement|SVGMaskElement|SVGMatrix|SVGMissingGlyphElement\n  |SVGNumber|SVGNumberList|SVGPathElement|SVGPatternElement|SVGPoint|SVGPolygonElement|SVGPolylineElement|SVGPreserveAspectRatio\n  |SVGRadialGradientElement|SVGRect|SVGRectElement|SVGSVGElement|SVGScriptElement|SVGSetElement|SVGStopElement|SVGStringList\n  |SVGStylable|SVGStyleElement|SVGSwitchElement|SVGSymbolElement|SVGTRefElement|SVGTSpanElement|SVGTests|SVGTextElement\n  |SVGTextPositioningElement|SVGTitleElement|SVGTransform|SVGTransformList|SVGTransformable|SVGUseElement|SVGVKernElement\n  |SVGViewElement|ServiceWorker|ServiceWorkerContainer|ServiceWorkerGlobalScope|ServiceWorkerRegistration|ServiceWorkerState\n  |ShadowRoot|SharedWorker|SharedWorkerGlobalScope|SourceBufferList|StereoPannerNode|Storage|StorageEvent|StyleSheet\n  |StyleSheetList|SubtleCrypto|SyncEvent|Text|TextMetrics|TimeEvent|TimeRanges|Touch|TouchEvent|TouchList|Transferable\n  |TreeWalker|UIEvent|USVString|VRDisplayCapabilities|ValidityState|WaveShaperNode|WebGL|WebGLActiveInfo|WebGLBuffer\n  |WebGLContextEvent|WebGLFramebuffer|WebGLProgram|WebGLRenderbuffer|WebGLRenderingContext|WebGLShader|WebGLShaderPrecisionFormat\n  |WebGLTexture|WebGLTimerQueryEXT|WebGLTransformFeedback|WebGLUniformLocation|WebGLVertexArrayObject|WebGLVertexArrayObjectOES\n  |WebSocket|WebSockets|WebVTT|WheelEvent|Window|WindowBase64|WindowEventHandlers|WindowTimers|Worker|WorkerGlobalScope\n  |WorkerLocation|WorkerNavigator|XMLHttpRequest|XMLHttpRequestEventTarget|XMLSerializer|XPathExpression|XPathResult\n  |XSLTProcessor))\\b(?!\\$)",
					"captures": {
						"1": {
							"name": "support.variable.dom.ojs"
						},
						"2": {
							"name": "support.class.dom.ojs"
						}
					}
				}
			]
		},
		"function-call": {
			"begin": "(?=(\\.\\s*)?([_$[:alpha:]][_$[:alnum:]]*)\\s*(<([^<>]|\\<[^<>]+\\>)+>\\s*)?\\()",
			"end": "(?<=\\))(?!(\\.\\s*)?([_$[:alpha:]][_$[:alnum:]]*)\\s*(<([^<>]|\\<[^<>]+\\>)+>\\s*)?\\()",
			"patterns": [
				{
					"include": "#support-objects"
				},
				{
					"name": "punctuation.accessor.ojs",
					"match": "\\."
				},
				{
					"name": "entity.name.function.ojs",
					"match": "([_$[:alpha:]][_$[:alnum:]]*)"
				},
				{
					"include": "#comment"
				},
				{
					"include": "#paren-expression"
				}
			]
		},
		"identifiers": {
			"patterns": [
				{
					"name": "support.class.ojs",
					"match": "([_$[:alpha:]][_$[:alnum:]]*)(?=\\s*\\.\\s*prototype\\b(?!\\$))"
				},
				{
					"match": "(?x)(\\.)\\s*(?:\n  ([[:upper:]][_$[:digit:][:upper:]]*) |\n  ([_$[:alpha:]][_$[:alnum:]]*)\n)(?=\\s*\\.\\s*[_$[:alpha:]][_$[:alnum:]]*)",
					"captures": {
						"1": {
							"name": "punctuation.accessor.ojs"
						},
						"2": {
							"name": "constant.other.object.property.ojs"
						},
						"3": {
							"name": "variable.other.object.property.ojs"
						}
					}
				},
				{
					"match": "(\\.)\\s*([[:upper:]][_$[:digit:][:upper:]]*)(?![_$[:alnum:]])",
					"captures": {
						"1": {
							"name": "punctuation.accessor.ojs"
						},
						"2": {
							"name": "constant.other.property.ojs"
						}
					}
				},
				{
					"match": "(\\.)\\s*([_$[:alpha:]][_$[:alnum:]]*)",
					"captures": {
						"1": {
							"name": "punctuation.accessor.ojs"
						},
						"2": {
							"name": "variable.other.property.ojs"
						}
					}
				},
				{
					"match": "(?x)(?:\n  ([[:upper:]][_$[:digit:][:upper:]]*) |\n  ([_$[:alpha:]][_$[:alnum:]]*)\n)(?=\\s*\\.\\s*[_$[:alpha:]][_$[:alnum:]]*)",
					"captures": {
						"1": {
							"name": "constant.other.object.ojs"
						},
						"2": {
							"name": "variable.other.object.ojs"
						}
					}
				},
				{
					"name": "constant.other.ojs",
					"match": "([[:upper:]][_$[:digit:][:upper:]]*)(?![_$[:alnum:]])"
				},
				{
					"name": "variable.other.readwrite.ojs",
					"match": "[_$[:alpha:]][_$[:alnum:]]*"
				}
			]
		},
		"cast": {
			"patterns": [
				{
					"include": "#jsx"
				}
			]
		},
		"new-expr": {
			"name": "new.expr.ojs",
			"begin": "(?<!\\.|\\$)\\b(new)\\b(?!\\$)",
			"beginCaptures": {
				"1": {
					"name": "keyword.operator.new.ojs"
				}
			},
			"end": "(?<=\\))|(?=[;),]|$|((?<!\\.|\\$)\\bnew\\b(?!\\$)))",
			"patterns": [
				{
					"include": "#paren-expression"
				},
				{
					"include": "#type"
				}
			]
		},
		"object-member": {
			"patterns": [
				{
					"include": "#comment"
				},
				{
					"name": "meta.object.member.ojs",
					"begin": "(?=(?:(?:\\'[^']*\\')|(?:\\\"[^\"]*\\\")|(?:\\[([^\\[\\]]|\\[[^\\[\\]]+\\])+\\]))\\s*:)",
					"end": "(?=,|\\})",
					"patterns": [
						{
							"name": "meta.object-literal.key.js",
							"begin": "(?=(?:(?:\\'[^']*\\')|(?:\\\"[^\"]*\\\")|(?:\\[([^\\[\\]]|\\[[^\\[\\]]+\\])+\\]))\\s*:)",
							"end": ":",
							"endCaptures": {
								"0": {
									"name": "punctuation.separator.key-value.js"
								}
							},
							"patterns": [
								{
									"include": "#string"
								},
								{
									"include": "#array-literal"
								}
							]
						},
						{
							"include": "#expression"
						}
					]
				},
				{
					"name": "meta.object.member.ojs",
					"begin": "(?x)(?:([_$[:alpha:]][_$[:alnum:]]*)\\s*(:)(?=\\s*( (async\\s+)|(function\\s*[(<])|(function\\s+)| ([_$[:alpha:]][_$[:alnum:]]*\\s*=>)| ((<([^<>]|\\<[^<>]+\\>)+>\\s*)?\\(([^()]|\\([^()]*\\))*\\)(\\s*:\\s*(.)*)?\\s*=>))))",
					"beginCaptures": {
						"0": {
							"name": "meta.object-literal.key.js"
						},
						"1": {
							"name": "entity.name.function.ojs"
						},
						"2": {
							"name": "punctuation.separator.key-value.js"
						}
					},
					"end": "(?=,|\\})",
					"patterns": [
						{
							"include": "#expression"
						}
					]
				},
				{
					"name": "meta.object.member.ojs",
					"begin": "(?:[_$[:alpha:]][_$[:alnum:]]*)\\s*(:)",
					"beginCaptures": {
						"0": {
							"name": "meta.object-literal.key.js"
						},
						"1": {
							"name": "punctuation.separator.key-value.js"
						}
					},
					"end": "(?=,|\\})",
					"patterns": [
						{
							"include": "#expression"
						}
					]
				},
				{
					"name": "meta.object.member.ojs",
					"begin": "\\.\\.\\.",
					"beginCaptures": {
						"0": {
							"name": "keyword.operator.spread.ojs"
						}
					},
					"end": "(?=,|\\})",
					"patterns": [
						{
							"include": "#expression"
						}
					]
				},
				{
					"name": "meta.object.member.ojs",
					"match": "([_$[:alpha:]][_$[:alnum:]]*)\\s*(?=,|\\}|$)",
					"captures": {
						"1": {
							"name": "variable.other.readwrite.ojs"
						}
					}
				},
				{
					"include": "#punctuation-comma"
				}
			]
		},
		"expression-operators": {
			"patterns": [
				{
					"name": "keyword.operator.expression.delete.ojs",
					"match": "(?<!\\.|\\$)\\bdelete\\b(?!\\$)"
				},
				{
					"name": "keyword.operator.expression.in.ojs",
					"match": "(?<!\\.|\\$)\\bin\\b(?!\\$)"
				},
				{
					"name": "keyword.operator.expression.where.ojs",
					"match": "(?<!\\.|\\$)\\bwhere\\b(?!\\$)"
				},
				{
					"name": "keyword.operator.expression.orderby.ojs",
					"match": "(?<!\\.|\\$)\\border\\s+by\\b(?!\\$)"
				},
				{
					"name": "keyword.operator.expression.instanceof.ojs",
					"match": "(?<!\\.|\\$)\\binstanceof\\b(?!\\$)"
				},
				{
					"name": "keyword.operator.new.ojs",
					"match": "(?<!\\.|\\$)\\bnew\\b(?!\\$)"
				},
				{
					"include": "#typeof-operator"
				},
				{
					"name": "keyword.operator.expression.void.ojs",
					"match": "(?<!\\.|\\$)\\bvoid\\b(?!\\$)"
				},
				{
					"name": "keyword.operator.spread.ojs",
					"match": "\\.\\.\\."
				},
				{
					"name": "keyword.operator.assignment.compound.ojs",
					"match": "\\*=|(?<!\\()/=|%=|\\+=|\\-="
				},
				{
					"name": "keyword.operator.assignment.compound.bitwise.ojs",
					"match": "\\&=|\\^=|<<=|>>=|>>>=|\\|="
				},
				{
					"name": "keyword.operator.comparison.ojs",
					"match": "==|!="
				},
				{
					"name": "keyword.operator.relational.ojs",
					"match": "<=|>=|<|>"
				},
				{
					"name": "keyword.operator.logical.ojs",
					"match": "\\!|&&|\\|\\|"
				},
				{
					"name": "keyword.operator.assignment.ojs",
					"match": "\\="
				},
				{
					"name": "keyword.operator.decrement.ojs",
					"match": "--"
				},
				{
					"name": "keyword.operator.increment.ojs",
					"match": "\\+\\+"
				},
				{
					"name": "keyword.operator.arithmetic.ojs",
					"match": "%|\\*|/|-|\\+"
				},
				{
					"match": "(?<=[_$[:alnum:]])\\s*(/)(?![/*])",
					"captures": {
						"1": {
							"name": "keyword.operator.arithmetic.ojs"
						}
					}
				}
			]
		},
		"typeof-operator": {
			"name": "keyword.operator.expression.typeof.ojs",
			"match": "(?<!\\.|\\$)\\btypeof\\b(?!\\$)"
		},
		"punctuation-comma": {
			"name": "punctuation.separator.comma.ojs",
			"match": ","
		},
		"punctuation-semicolon": {
			"name": "punctuation.terminator.statement.ojs",
			"match": ";"
		},
		"punctuation-accessor": {
			"name": "punctuation.accessor.ojs",
			"match": "\\."
		},
		"paren-expression": {
			"begin": "\\(",
			"beginCaptures": {
				"0": {
					"name": "meta.brace.round.ojs"
				}
			},
			"end": "\\)",
			"endCaptures": {
				"0": {
					"name": "meta.brace.round.ojs"
				}
			},
			"patterns": [
				{
					"include": "#expression"
				},
				{
					"include": "#punctuation-comma"
				}
			]
		},
		"regex": {
			"patterns": [
				{
					"name": "string.regex.ojs",
					"begin": "(?<=[=(:,\\[?+!]|return|case|=>|&&|\\|\\||\\*\\/)\\s*(/)(?![/*])(?=(?:[^/\\\\\\[]|\\\\.|\\[([^\\]\\\\]|\\\\.)+\\])+/(?![/*])[gimy]*(?!\\s*[a-zA-Z0-9_$]))",
					"beginCaptures": {
						"1": {
							"name": "punctuation.definition.string.begin.ojs"
						}
					},
					"end": "(/)([gimuy]*)",
					"endCaptures": {
						"1": {
							"name": "punctuation.definition.string.end.ojs"
						},
						"2": {
							"name": "keyword.other.ojs"
						}
					},
					"patterns": [
						{
							"include": "#regexp"
						}
					]
				},
				{
					"name": "string.regex.ojs",
					"begin": "(?<![_$[:alnum:]])/(?![/*])(?=(?:[^/\\\\\\[]|\\\\.|\\[([^\\]\\\\]|\\\\.)+\\])+/(?![/*])[gimy]*(?!\\s*[a-zA-Z0-9_$]))",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.ojs"
						}
					},
					"end": "(/)([gimuy]*)",
					"endCaptures": {
						"1": {
							"name": "punctuation.definition.string.end.ojs"
						},
						"2": {
							"name": "keyword.other.ojs"
						}
					},
					"patterns": [
						{
							"include": "#regexp"
						}
					]
				}
			]
		},
		"regexp": {
			"patterns": [
				{
					"name": "keyword.control.anchor.regexp",
					"match": "\\\\[bB]|\\^|\\$"
				},
				{
					"name": "keyword.other.back-reference.regexp",
					"match": "\\\\[1-9]\\d*"
				},
				{
					"name": "keyword.operator.quantifier.regexp",
					"match": "[?+*]|\\{(\\d+,\\d+|\\d+,|,\\d+|\\d+)\\}\\??"
				},
				{
					"name": "keyword.operator.or.regexp",
					"match": "\\|"
				},
				{
					"name": "meta.group.assertion.regexp",
					"begin": "(\\()((\\?=)|(\\?!))",
					"beginCaptures": {
						"1": {
							"name": "punctuation.definition.group.regexp"
						},
						"2": {
							"name": "punctuation.definition.group.assertion.regexp"
						},
						"3": {
							"name": "meta.assertion.look-ahead.regexp"
						},
						"4": {
							"name": "meta.assertion.negative-look-ahead.regexp"
						}
					},
					"end": "(\\))",
					"endCaptures": {
						"1": {
							"name": "punctuation.definition.group.regexp"
						}
					},
					"patterns": [
						{
							"include": "#regexp"
						}
					]
				},
				{
					"name": "meta.group.regexp",
					"begin": "\\((\\?:)?",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.group.regexp"
						},
						"1": {
							"name": "punctuation.definition.group.capture.regexp"
						}
					},
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.group.regexp"
						}
					},
					"patterns": [
						{
							"include": "#regexp"
						}
					]
				},
				{
					"name": "constant.other.character-class.set.regexp",
					"begin": "(\\[)(\\^)?",
					"beginCaptures": {
						"1": {
							"name": "punctuation.definition.character-class.regexp"
						},
						"2": {
							"name": "keyword.operator.negation.regexp"
						}
					},
					"end": "(\\])",
					"endCaptures": {
						"1": {
							"name": "punctuation.definition.character-class.regexp"
						}
					},
					"patterns": [
						{
							"name": "constant.other.character-class.range.regexp",
							"match": "(?:.|(\\\\(?:[0-7]{3}|x\\h\\h|u\\h\\h\\h\\h))|(\\\\c[A-Z])|(\\\\.))\\-(?:[^\\]\\\\]|(\\\\(?:[0-7]{3}|x\\h\\h|u\\h\\h\\h\\h))|(\\\\c[A-Z])|(\\\\.))",
							"captures": {
								"1": {
									"name": "constant.character.numeric.regexp"
								},
								"2": {
									"name": "constant.character.control.regexp"
								},
								"3": {
									"name": "constant.character.escape.backslash.regexp"
								},
								"4": {
									"name": "constant.character.numeric.regexp"
								},
								"5": {
									"name": "constant.character.control.regexp"
								},
								"6": {
									"name": "constant.character.escape.backslash.regexp"
								}
							}
						},
						{
							"include": "#regex-character-class"
						}
					]
				},
				{
					"include": "#regex-character-class"
				}
			]
		},
		"regex-character-class": {
			"patterns": [
				{
					"name": "constant.other.character-class.regexp",
					"match": "\\\\[wWsSdDtrnvf]|\\."
				},
				{
					"name": "constant.character.numeric.regexp",
					"match": "\\\\([0-7]{3}|x\\h\\h|u\\h\\h\\h\\h)"
				},
				{
					"name": "constant.character.control.regexp",
					"match": "\\\\c[A-Z]"
				},
				{
					"name": "constant.character.escape.backslash.regexp",
					"match": "\\\\."
				}
			]
		},
		"string": {
			"name": "string.quoted.double.ojs",
			"begin": "\"",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.ojs"
				}
			},
			"end": "(\")",
			"endCaptures": {
				"1": {
					"name": "punctuation.definition.string.end.ojs"
				}
			},
			"patterns": [
				{
					"include": "#string-character-escape"
				}
			]
		},
		"string-character-escape": {
			"name": "constant.character.escape.ojs",
			"match": "\\\\(x\\h{2}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.|$)"
		},
		"literal": {
			"name": "literal.ojs",
			"patterns": [
				{
					"include": "#numeric-literal"
				},
				{
					"include": "#boolean-literal"
				},
				{
					"include": "#null-literal"
				},
				{
					"include": "#undefined-literal"
				},
				{
					"include": "#numericConstant-literal"
				},
				{
					"include": "#array-literal"
				},
				{
					"include": "#this-literal"
				},
				{
					"include": "#super-literal"
				}
			]
		},
		"array-literal": {
			"name": "meta.array.literal.ojs",
			"begin": "\\[",
			"beginCaptures": {
				"0": {
					"name": "meta.brace.square.ojs"
				}
			},
			"end": "\\]",
			"endCaptures": {
				"0": {
					"name": "meta.brace.square.ojs"
				}
			},
			"patterns": [
				{
					"include": "#expression"
				},
				{
					"include": "#punctuation-comma"
				}
			]
		},
		"numeric-literal": {
			"patterns": [
				{
					"match": "(?x)\n(?<!\\$)(?:\n  (?:\\b[0-9]+(\\.)[0-9]+[eE][+-]?[0-9]+\\b)| # 1.1E+3\n  (?:\\b[0-9]+(\\.)[eE][+-]?[0-9]+\\b)|       # 1.E+3\n  (?:\\B(\\.)[0-9]+[eE][+-]?[0-9]+\\b)|       # .1E+3\n  (?:\\b[0-9]+[eE][+-]?[0-9]+\\b)|            # 1E+3\n  (?:\\b[0-9]+(\\.)[0-9]+\\b)|                # 1.1\n  (?:\\b[0-9]+(\\.)\\B)|                      # 1.\n  (?:\\B(\\.)[0-9]+\\b)|                      # .1\n  (?:\\b[0-9]+\\b(?!\\.))                     # 1\n)(?!\\$)",
					"captures": {
						"0": {
							"name": "constant.numeric.decimal.ojs"
						},
						"1": {
							"name": "meta.delimiter.decimal.period.ojs"
						},
						"2": {
							"name": "meta.delimiter.decimal.period.ojs"
						},
						"3": {
							"name": "meta.delimiter.decimal.period.ojs"
						},
						"4": {
							"name": "meta.delimiter.decimal.period.ojs"
						},
						"5": {
							"name": "meta.delimiter.decimal.period.ojs"
						},
						"6": {
							"name": "meta.delimiter.decimal.period.ojs"
						}
					}
				}
			]
		},
		"boolean-literal": {
			"patterns": [
				{
					"name": "constant.language.boolean.true.ojs",
					"match": "(?<!\\.|\\$)\\btrue\\b(?!\\$)"
				},
				{
					"name": "constant.language.boolean.false.ojs",
					"match": "(?<!\\.|\\$)\\bfalse\\b(?!\\$)"
				}
			]
		},
		"null-literal": {
			"name": "constant.language.null.ojs",
			"match": "(?<!\\.|\\$)\\bnull\\b(?!\\$)"
		},
		"this-literal": {
			"name": "variable.language.this.ojs",
			"match": "(?<!\\.|\\$)\\bthis\\b(?!\\$)"
		},
		"super-literal": {
			"name": "variable.language.super.ojs",
			"match": "(?<!\\.|\\$)\\bsuper\\b(?!\\$)"
		},
		"undefined-literal": {
			"name": "constant.language.undefined.ojs",
			"match": "(?<!\\.|\\$)\\bundefined\\b(?!\\$)"
		},
		"numericConstant-literal": {
			"patterns": [
				{
					"name": "constant.language.nan.ojs",
					"match": "(?<!\\.|\\$)\\bNaN\\b(?!\\$)"
				},
				{
					"name": "constant.language.infinity.ojs",
					"match": "(?<!\\.|\\$)\\bInfinity\\b(?!\\$)"
				}
			]
		},
		"access-modifier": {
			"name": "storage.modifier.ojs",
			"match": "(?<!\\.|\\$)\\b(global)\\b(?!\\$)"
		},
		"property-accessor": {
			"name": "storage.type.property.ojs",
			"match": "(?<!\\.|\\$)\\b(get|set)\\b(?!\\$)"
		},
		"comment": {
			"patterns": [
				{
					"name": "comment.block.documentation.ojs",
					"begin": "/\\*\\*(?!/)",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.comment.ojs"
						}
					},
					"end": "\\*/",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.comment.ojs"
						}
					},
					"patterns": [
						{
							"include": "#docblock"
						}
					]
				},
				{
					"name": "comment.block.ojs",
					"begin": "/\\*",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.comment.ojs"
						}
					},
					"end": "\\*/",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.comment.ojs"
						}
					}
				},
				{
					"begin": "(^[ \\t]+)?(?=//)",
					"beginCaptures": {
						"1": {
							"name": "punctuation.whitespace.comment.leading.ojs"
						}
					},
					"end": "(?=$)",
					"patterns": [
						{
							"name": "comment.line.double-slash.js",
							"begin": "//",
							"beginCaptures": {
								"0": {
									"name": "punctuation.definition.comment.ojs"
								}
							},
							"end": "(?=$)"
						}
					]
				}
			]
		},
		"directives": {
			"name": "comment.line.triple-slash.directive.js",
			"begin": "^(///)\\s*(?=<(reference|amd-dependency|amd-module)(\\s+(path|types|no-default-lib|name)\\s*=\\s*((\\'[^']*\\')|(\\\"[^\"]*\\\")))+\\s*/>\\s*$)",
			"beginCaptures": {
				"1": {
					"name": "punctuation.definition.comment.ojs"
				}
			},
			"end": "(?=$)",
			"patterns": [
				{
					"name": "meta.tag.ojs",
					"begin": "(<)(reference|amd-dependency|amd-module)",
					"beginCaptures": {
						"1": {
							"name": "punctuation.definition.tag.directive.ojs"
						},
						"2": {
							"name": "entity.name.tag.directive.ojs"
						}
					},
					"end": "/>",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.tag.directive.ojs"
						}
					},
					"patterns": [
						{
							"name": "entity.other.attribute-name.directive.js",
							"match": "path|types|no-default-lib|name"
						},
						{
							"name": "keyword.operator.assignment.ojs",
							"match": "="
						},
						{
							"include": "#string"
						}
					]
				}
			]
		},
		"docblock": {
			"patterns": [
				{
					"name": "storage.type.class.jsdoc",
					"match": "(?<!\\w)@(abstract|access|alias|arg|argument|async|attribute|augments|author|beta|borrows|bubbes|callback|chainable|class|classdesc|code|config|const|constant|constructor|constructs|copyright|default|defaultvalue|define|deprecated|desc|description|dict|emits|enum|event|example|exports?|extends|extension|extension_for|extensionfor|external|file|fileoverview|final|fires|for|function|global|host|ignore|implements|inherit[Dd]oc|inner|instance|interface|kind|lends|license|listens|main|member|memberof|method|mixex|mixins?|module|name|namespace|nocollapse|nosideeffects|override|overview|package|param|preserve|private|prop|property|protected|public|read[Oo]nly|record|require[ds]|returns?|see|since|static|struct|submodule|summary|template|this|throws|todo|tutorial|type|typedef|unrestricted|uses|var|variation|version|virtual|writeOnce)\\b"
				},
				{
					"match": "(?x)\n(?:(?<=@param)|(?<=@arg)|(?<=@argument)|(?<=@type))\n\\s+\n({(?:\n  \\* |                                        # {*} any type\n  \\? |                                        # {?} unknown type\n  (?:                                         # Check for a prefix\n    \\? |                                      # {?string} nullable type\n    !   |                                     # {!string} non-nullable type\n    \\.{3}                                     # {...string} variable number of parameters\n  )?\n  (?:\n    \\(                                        # Opening bracket of multiple types with parenthesis {(string|number)}\n      [a-zA-Z_$]+\n      (?:\n        (?:\n          [\\w$]*\n          (?:\\[\\])?                           # {(string[]|number)} type application, an array of strings or a number\n        ) |\n        \\.?<[\\w$]+(?:,\\s+[\\w$]+)*>            # {Array<string>} or {Object<string, number>} type application (optional .)\n      )\n      (?:\n        [\\.|~]                                # {Foo.bar} namespaced, {string|number} multiple, {Foo~bar} class-specific callback\n        [a-zA-Z_$]+\n        (?:\n          (?:\n            [\\w$]*\n            (?:\\[\\])?                        # {(string|number[])} type application, a string or an array of numbers\n          ) |\n          \\.?<[\\w$]+(?:,\\s+[\\w$]+)*>         # {Array<string>} or {Object<string, number>} type application (optional .)\n        )\n      )*\n    \\) |\n    [a-zA-Z_$]+\n    (?:\n      (?:\n        [\\w$]*\n        (?:\\[\\])?                            # {string[]|number} type application, an array of strings or a number\n      ) |\n      \\.?<[\\w$]+(?:,\\s+[\\w$]+)*>             # {Array<string>} or {Object<string, number>} type application (optional .)\n    )\n    (?:\n      [\\.|~]                                 # {Foo.bar} namespaced, {string|number} multiple, {Foo~bar} class-specific callback\n      [a-zA-Z_$]+\n      (?:\n        [\\w$]* |\n        \\.?<[\\w$]+(?:,\\s+[\\w$]+)*>           # {Array<string>} or {Object<string, number>} type application (optional .)\n      )\n    )*\n  )\n                                             # Check for suffix\n  (?:\\[\\])?                                  # {string[]} type application, an array of strings\n  =?                                         # {string=} optional parameter\n)})\n\\s+\n(\n  \\[                                         # [foo] optional parameter\n    \\s*\n    (?:\n      [a-zA-Z_$][\\w$]*\n      (?:\n        (?:\\[\\])?                            # Foo[].bar properties within an array\n        \\.                                   # Foo.Bar namespaced parameter\n        [a-zA-Z_$][\\w$]*\n      )*\n      (?:\n        \\s*\n        =                                    # [foo=bar] Default parameter value\n        \\s*\n        [\\w$\\s]*\n      )?\n    )\n    \\s*\n  \\] |\n  (?:\n    [a-zA-Z_$][\\w$]*\n    (?:\n      (?:\\[\\])?                              # Foo[].bar properties within an array\n      \\.                                     # Foo.Bar namespaced parameter\n      [a-zA-Z_$][\\w$]*\n    )*\n  )?\n)\n\\s+\n(?:-\\s+)?                                    # optional hyphen before the description\n((?:(?!\\*\\/).)*)                             # The type description",
					"captures": {
						"0": {
							"name": "other.meta.jsdoc"
						},
						"1": {
							"name": "entity.name.type.instance.jsdoc"
						},
						"2": {
							"name": "variable.other.jsdoc"
						},
						"3": {
							"name": "other.description.jsdoc"
						}
					}
				},
				{
					"match": "(?x)\n({(?:\n  \\* |                                       # {*} any type\n  \\? |                                       # {?} unknown type\n\n  (?:                                        # Check for a prefix\n    \\? |                                     # {?string} nullable type\n    !   |                                    # {!string} non-nullable type\n    \\.{3}                                    # {...string} variable number of parameters\n  )?\n\n  (?:\n    \\(                                       # Opening bracket of multiple types with parenthesis {(string|number)}\n      [a-zA-Z_$]+\n      (?:\n        [\\w$]* |\n        \\.?<[\\w$]+(?:,\\s+[\\w$]+)*>           # {Array<string>} or {Object<string, number>} type application (optional .)\n      )\n      (?:\n        [\\.|~]                               # {Foo.bar} namespaced, {string|number} multiple, {Foo~bar} class-specific callback\n        [a-zA-Z_$]+\n        (?:\n          [\\w$]* |\n          \\.?<[\\w$]+(?:,\\s+[\\w$]+)*>         # {Array<string>} or {Object<string, number>} type application (optional .)\n        )\n      )*\n    \\) |\n    [a-zA-Z_$]+\n    (?:\n      [\\w$]* |\n      \\.?<[\\w$]+(?:,\\s+[\\w$]+)*>             # {Array<string>} or {Object<string, number>} type application (optional .)\n    )\n    (?:\n      [\\.|~]                                 # {Foo.bar} namespaced, {string|number} multiple, {Foo~bar} class-specific callback\n      [a-zA-Z_$]+\n      (?:\n        [\\w$]* |\n        \\.?<[\\w$]+(?:,\\s+[\\w$]+)*>           # {Array<string>} or {Object<string, number>} type application (optional .)\n      )\n    )*\n  )\n                                             # Check for suffix\n  (?:\\[\\])?                                  # {string[]} type application, an array of strings\n  =?                                         # {string=} optional parameter\n)})\n\\s+\n(?:-\\s+)?                                    # optional hyphen before the description\n((?:(?!\\*\\/).)*)                             # The type description",
					"captures": {
						"0": {
							"name": "other.meta.jsdoc"
						},
						"1": {
							"name": "entity.name.type.instance.jsdoc"
						},
						"2": {
							"name": "other.description.jsdoc"
						}
					}
				}
			]
		}
	},
	"version": "https://github.com/Microsoft/TypeScript-TmLanguage/commit/b5ce6b5632711b9230a33213874b818d994acab9"
}